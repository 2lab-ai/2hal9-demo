version: '3.8'

services:
  genius-game-server:
    build: 
      context: ..
      dockerfile: docker/Dockerfile
    container_name: genius-game-server
    ports:
      - "8080:8080"  # HTTP API
      - "8081:8081"  # WebSocket
    environment:
      - RUST_LOG=debug
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8080
      - WS_PORT=8081
      - DATABASE_URL=postgresql://genius:genius_pass@postgres:5432/genius_games
      - REDIS_URL=redis://redis:6379
      - OLLAMA_ENDPOINT=http://ollama:11434
    depends_on:
      - postgres
      - redis
      - ollama
    volumes:
      - ../data:/app/data
    networks:
      - genius-network
    restart: unless-stopped

  postgres:
    image: postgres:16-alpine
    container_name: genius-postgres
    environment:
      - POSTGRES_USER=genius
      - POSTGRES_PASSWORD=genius_pass
      - POSTGRES_DB=genius_games
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ../migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - genius-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U genius"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: genius-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - genius-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  ollama:
    image: ollama/ollama:latest
    container_name: genius-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama-data:/root/.ollama
    networks:
      - genius-network
    environment:
      - OLLAMA_KEEP_ALIVE=24h
    deploy:
      resources:
        limits:
          memory: 8G
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    command: serve

  # Monitoring stack
  prometheus:
    image: prom/prometheus:latest
    container_name: genius-prometheus
    volumes:
      - ../monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - genius-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

  grafana:
    image: grafana/grafana:latest
    container_name: genius-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ../monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ../monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=genius_admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - genius-network
    depends_on:
      - prometheus

  # Development tools
  adminer:
    image: adminer:latest
    container_name: genius-adminer
    ports:
      - "8082:8080"
    networks:
      - genius-network
    depends_on:
      - postgres

volumes:
  postgres-data:
  redis-data:
  ollama-data:
  prometheus-data:
  grafana-data:

networks:
  genius-network:
    driver: bridge